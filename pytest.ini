[pytest]
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    migrations

python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict-markers
    --ignore=docs/conf.py
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
    --pyargs
# The order of these options matters. testpaths comes after addopts so that
# oca_pre_commit_hooks in testpaths is interpreted as
# --pyargs oca_pre_commit_hooks.
# Any tests in the src/ directory (that is, tests installed with the package)
# can be run by any user with pytest --pyargs oca_pre_commit_hooks.
# Packages that are sensitive to the host machine, most famously NumPy,
# include tests with the installed package so that any user can check
# at any time that everything is working properly.
# If you do choose to make installable tests, this will run the installed
# tests as they are actually installed (same principle as when we ensure that
# we always test the installed version of the package).
# If you have no need for this (and your src/ directory is very large),
# you can save a few milliseconds on testing by telling pytest not to search
# the src/ directory by removing
# --pyargs and oca_pre_commit_hooks from the options here.
testpaths =
    src/oca_pre_commit_hooks
    tests/

# Idea from: https://til.simonwillison.net/pytest/treat-warnings-as-errors
filterwarnings =
    error
# You can add exclusions, some examples:
#    ignore:'oca_pre_commit_hooks' defines default_app_config:PendingDeprecationWarning::
#    ignore:The {{% if:::
#    ignore:Coverage disabled via --no-cov switch!
